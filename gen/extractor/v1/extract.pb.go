// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: extractor/v1/extract.proto

package extractorv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExtractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ExtractRequest) Reset() {
	*x = ExtractRequest{}
	mi := &file_extractor_v1_extract_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractRequest) ProtoMessage() {}

func (x *ExtractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extractor_v1_extract_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractRequest.ProtoReflect.Descriptor instead.
func (*ExtractRequest) Descriptor() ([]byte, []int) {
	return file_extractor_v1_extract_proto_rawDescGZIP(), []int{0}
}

func (x *ExtractRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ExtractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocPage *DocPage `protobuf:"bytes,1,opt,name=doc_page,json=docPage,proto3" json:"doc_page,omitempty"`
}

func (x *ExtractResponse) Reset() {
	*x = ExtractResponse{}
	mi := &file_extractor_v1_extract_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractResponse) ProtoMessage() {}

func (x *ExtractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_extractor_v1_extract_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractResponse.ProtoReflect.Descriptor instead.
func (*ExtractResponse) Descriptor() ([]byte, []int) {
	return file_extractor_v1_extract_proto_rawDescGZIP(), []int{1}
}

func (x *ExtractResponse) GetDocPage() *DocPage {
	if x != nil {
		return x.DocPage
	}
	return nil
}

type DocPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceTitle     string        `protobuf:"bytes,1,opt,name=source_title,json=sourceTitle,proto3" json:"source_title,omitempty"`
	ContentMarkdown string        `protobuf:"bytes,2,opt,name=content_markdown,json=contentMarkdown,proto3" json:"content_markdown,omitempty"`
	DocSections     []*DocSection `protobuf:"bytes,3,rep,name=doc_sections,json=docSections,proto3" json:"doc_sections,omitempty"`
	SourceUrl       string        `protobuf:"bytes,4,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
}

func (x *DocPage) Reset() {
	*x = DocPage{}
	mi := &file_extractor_v1_extract_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocPage) ProtoMessage() {}

func (x *DocPage) ProtoReflect() protoreflect.Message {
	mi := &file_extractor_v1_extract_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocPage.ProtoReflect.Descriptor instead.
func (*DocPage) Descriptor() ([]byte, []int) {
	return file_extractor_v1_extract_proto_rawDescGZIP(), []int{2}
}

func (x *DocPage) GetSourceTitle() string {
	if x != nil {
		return x.SourceTitle
	}
	return ""
}

func (x *DocPage) GetContentMarkdown() string {
	if x != nil {
		return x.ContentMarkdown
	}
	return ""
}

func (x *DocPage) GetDocSections() []*DocSection {
	if x != nil {
		return x.DocSections
	}
	return nil
}

func (x *DocPage) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

type DocSection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SectionTitle    string `protobuf:"bytes,1,opt,name=section_title,json=sectionTitle,proto3" json:"section_title,omitempty"`
	Order           int32  `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
	SourceTitle     string `protobuf:"bytes,3,opt,name=source_title,json=sourceTitle,proto3" json:"source_title,omitempty"`
	SourceUrl       string `protobuf:"bytes,4,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	SectionAnchor   string `protobuf:"bytes,5,opt,name=section_anchor,json=sectionAnchor,proto3" json:"section_anchor,omitempty"`
	ContentMarkdown string `protobuf:"bytes,6,opt,name=content_markdown,json=contentMarkdown,proto3" json:"content_markdown,omitempty"`
}

func (x *DocSection) Reset() {
	*x = DocSection{}
	mi := &file_extractor_v1_extract_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocSection) ProtoMessage() {}

func (x *DocSection) ProtoReflect() protoreflect.Message {
	mi := &file_extractor_v1_extract_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocSection.ProtoReflect.Descriptor instead.
func (*DocSection) Descriptor() ([]byte, []int) {
	return file_extractor_v1_extract_proto_rawDescGZIP(), []int{3}
}

func (x *DocSection) GetSectionTitle() string {
	if x != nil {
		return x.SectionTitle
	}
	return ""
}

func (x *DocSection) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *DocSection) GetSourceTitle() string {
	if x != nil {
		return x.SourceTitle
	}
	return ""
}

func (x *DocSection) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *DocSection) GetSectionAnchor() string {
	if x != nil {
		return x.SectionAnchor
	}
	return ""
}

func (x *DocSection) GetContentMarkdown() string {
	if x != nil {
		return x.ContentMarkdown
	}
	return ""
}

var File_extractor_v1_extract_proto protoreflect.FileDescriptor

var file_extractor_v1_extract_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x22, 0x22, 0x0a, 0x0e, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x43,
	0x0a, 0x0f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x50, 0x61, 0x67, 0x65, 0x52, 0x07, 0x64, 0x6f, 0x63, 0x50,
	0x61, 0x67, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x07, 0x44, 0x6f, 0x63, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61,
	0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x3b, 0x0a,
	0x0c, 0x64, 0x6f, 0x63, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64,
	0x6f, 0x63, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xdb, 0x01, 0x0a, 0x0a, 0x44, 0x6f,
	0x63, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x10,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d,
	0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x32, 0x5c, 0x0a, 0x10, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1c, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x47, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x69, 0x6f, 0x63, 0x65, 0x61, 0x6e, 0x2f, 0x73, 0x68, 0x6f, 0x70,
	0x69, 0x66, 0x79, 0x2d, 0x64, 0x6f, 0x63, 0x2d, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2f,
	0x76, 0x31, 0x3b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_extractor_v1_extract_proto_rawDescOnce sync.Once
	file_extractor_v1_extract_proto_rawDescData = file_extractor_v1_extract_proto_rawDesc
)

func file_extractor_v1_extract_proto_rawDescGZIP() []byte {
	file_extractor_v1_extract_proto_rawDescOnce.Do(func() {
		file_extractor_v1_extract_proto_rawDescData = protoimpl.X.CompressGZIP(file_extractor_v1_extract_proto_rawDescData)
	})
	return file_extractor_v1_extract_proto_rawDescData
}

var file_extractor_v1_extract_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_extractor_v1_extract_proto_goTypes = []any{
	(*ExtractRequest)(nil),  // 0: extractor.v1.ExtractRequest
	(*ExtractResponse)(nil), // 1: extractor.v1.ExtractResponse
	(*DocPage)(nil),         // 2: extractor.v1.DocPage
	(*DocSection)(nil),      // 3: extractor.v1.DocSection
}
var file_extractor_v1_extract_proto_depIdxs = []int32{
	2, // 0: extractor.v1.ExtractResponse.doc_page:type_name -> extractor.v1.DocPage
	3, // 1: extractor.v1.DocPage.doc_sections:type_name -> extractor.v1.DocSection
	0, // 2: extractor.v1.ExtractorService.Extract:input_type -> extractor.v1.ExtractRequest
	1, // 3: extractor.v1.ExtractorService.Extract:output_type -> extractor.v1.ExtractResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_extractor_v1_extract_proto_init() }
func file_extractor_v1_extract_proto_init() {
	if File_extractor_v1_extract_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_extractor_v1_extract_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_extractor_v1_extract_proto_goTypes,
		DependencyIndexes: file_extractor_v1_extract_proto_depIdxs,
		MessageInfos:      file_extractor_v1_extract_proto_msgTypes,
	}.Build()
	File_extractor_v1_extract_proto = out.File
	file_extractor_v1_extract_proto_rawDesc = nil
	file_extractor_v1_extract_proto_goTypes = nil
	file_extractor_v1_extract_proto_depIdxs = nil
}
